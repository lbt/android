#!/usr/bin/perl -w

use strict;

my $defaultxml = $ARGV[0] ;
if (! $defaultxml) {
  $defaultxml = "default.xml";
}
my $tmpl="local_manifest.xml.template";
my $localxml="local_manifests/hybris.xml";
my $keep="keep.pathlist.d";

my %keep;
my %tmpl_paths;
my @re;
opendir(my $KEEPDIR, $keep) or die "No $keep dir";
foreach (grep /.pathlist$/,readdir($KEEPDIR)) {
  if (open my $KEEP, "<", "$keep/$_") {
    while (<$KEEP>) {
      next if /^\s*#/; # skip comments
      chomp;
      s/#.*$//; # Allow comments after a keep line
      s/\s+$//; # Remove trailing space
      if (s/^re: //) {
	push @re, $_;  # it's a regexp match
      } else {
	$keep{$_} = 1;
      }
    }
  } else { die; }
}

if (open my $TMPL, "<", $tmpl) {
  while (<$TMPL>) {
    next if /^\s*#/; # skip comments
    chomp;
    next unless /path="([^"]+)"/;
    $tmpl_paths{$1} = 1;
    print "Not keeping $1 found in the template\n";
  }
} else { die; }

open my $TMPL, "<", $tmpl or die $!;
open my $LOCALXML, ">", $localxml or die $!;
open my $DEFAULTXML, "<", $defaultxml or die $!;

while (<$TMPL>) {
  last if /REMOVELIST/;
  print $LOCALXML $_;
}

while (<$DEFAULTXML>) {
  next unless /<project/;

  next unless /path="([^"]+)"/;
  my $path = $1;
  my $keep=0;

  if (! defined $tmpl_paths{$path}) { # don't keep paths in the template
    if (defined $keep{$path}) {
      s/^/<!-- /; s/$/ --> <!-- in keep.pathlist -->/; # show the repo to be kept
      $keep=1;
    } else {
      foreach my $re (@re) {
	if ($path =~ /$re/) {
	  s/^/<!-- /; s/$/ --> <!-- matches re: $re -->/; # show the repo to be kept
	  $keep=1;
	}
      }
    }
  }
  if (! $keep) { # create remove-project entries for unwanted repos
    if (! /\/>$/ ) {
      s(>$)(/>);
    }
    s/<project/<remove-project/;
    if (defined $tmpl_paths{$path}) {
      s/$/<!-- redefined later in this file -->/;
    }
  }
  print $LOCALXML $_;
}

while (<$TMPL>) {
  print $LOCALXML $_;
}
