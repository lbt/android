#!/usr/bin/perl -w

use strict;

my $defaultxml = $ARGV[0] ;
if (! $defaultxml) {
  $defaultxml = "default.xml";
}
my $tmpl="local_manifest.xml.template";
my $localxml="local_manifests/hybris.xml";
my $keep="keep.pathlist";

my %keep;
my @re;
if (open my $KEEP, "<", $keep) {
  while (<$KEEP>) {
    next if /^\s*#/; # skip comments
    chomp;
    s/#.*$//; # Allow comments after a keep line
    s/\s+$//; # Remove trailing space
    if (s/^re: //) {
      push @re, $_;  # it's a regexp match
    } else {
      $keep{$_} = 1;
    }
  }
} else { die; }

open my $TMPL, "<", $tmpl or die $!;
open my $LOCALXML, ">", $localxml or die $!;
open my $DEFAULTXML, "<", $defaultxml or die $!;

while (<$TMPL>) {
  last if /REMOVELIST/;
  print $LOCALXML $_;
}

while (<$DEFAULTXML>) {
  next unless /<project/;

  next unless /path="([^"]+)"/;
  my $path = $1;
  my $keep=0;

  if (defined $keep{$path}) {
    s/^/<!-- /; s/$/ -->/; # show the repo to be kept
    $keep=1;
  } else {
    foreach my $re (@re) {
      print "Considering $re against $path";
      if ($path =~ /$re/) {
	s/^/<!-- /; s/$/ -->/; # show the repo to be kept
	$keep=1;
	print " : yes\n";
      } else { print " : no\n"; }
    }
  }
  if (! $keep) { # create remove-project entries for unwanted repos
    if (! /\/>$/ ) {
      s(>$)(/>);
    }
    s/<project/<remove-project/;
  }
  print $LOCALXML $_;
}

while (<$TMPL>) {
  print $LOCALXML $_;
}
